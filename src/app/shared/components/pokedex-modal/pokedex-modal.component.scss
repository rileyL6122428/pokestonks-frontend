.pokedex-modal-backdrop {
  background-color: rgba(0, 0, 0, 0.5);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  width: 100%;
  height: 100%;
}

$modal-border-radius: 12px;
$modal-border-radius-contracted: 151px;
$top-bottom-section-height: 151px;
$black-circle-radius: 175px;
$shake-distance: 5px;
$shake-rotation: 10deg;

.pokedex-modal {
  background-color: rgba(0, 0, 0, 0);
  width: 450px;
  height: 340px;
  animation:
    fadeInModalContainer 0.7s forwards,
    expandModalContainer 1s 0.8s forwards;

  .pokedex-modal-middle-section {
    background-color: #abe2f0;
    height: calc(100% - #{$top-bottom-section-height} * 2);
    overflow-y: scroll;
    padding: 10px;
    padding-bottom: 20px;

    * {
      margin: 0;
      padding: 0;
    }

    .modal-button-group {
      margin-top: 20px;
      * {
        margin-right: 10px;
      }
    }
  }

  .pokedex-modal-top-section,
  .pokedex-modal-bottom-section {
    background-color: #c00c20;
    height: $top-bottom-section-height;
  }

  .pokedex-modal-top-section {
    border-top-left-radius: $modal-border-radius;
    border-top-right-radius: $modal-border-radius;

    .black-half-circle-top {
      background-color: #000;
      border-top-left-radius: $black-circle-radius;
      border-top-right-radius: $black-circle-radius;
      height: calc($black-circle-radius / 2);
      width: $black-circle-radius;
      position: relative;
      top: calc($top-bottom-section-height - $black-circle-radius / 2);
      left: calc(50% - #{$black-circle-radius} / 2);
    }
  }

  .pokedex-modal-bottom-section {
    border-bottom-left-radius: $modal-border-radius;
    border-bottom-right-radius: $modal-border-radius;

    .black-half-circle-bottom {
      background-color: #000;
      border-bottom-left-radius: $black-circle-radius;
      border-bottom-right-radius: $black-circle-radius;
      height: calc($black-circle-radius / 2);
      width: $black-circle-radius;
      position: relative;
      top: 0;
      left: calc(50% - #{$black-circle-radius} / 2);
    }
  }

  &.render-pokeball {
    .pokedex-modal-middle-section {
      animation: contractCenterSection 0.8s forwards;
    }

    .pokedex-modal-top-section {
      animation: contractTopSection 0.8s forwards;
      border-bottom: black 2px solid;
    }

    .pokedex-modal-bottom-section {
      animation: contractBottomSection 0.8s forwards;
    }

    &.animate-pokemon-shake {
      height: 302px;
      width: $top-bottom-section-height * 2;
      animation:
        contractModalContainer 0.8s,
        pokeballShake 1s 1s infinite;
    }

    &.animate-pokemon-caught {
      height: 302px;
      width: $top-bottom-section-height * 2;

      animation: pokeballCaught 1s 0.4s 1 forwards;
    }
  }
}

@keyframes fadeInModalContainer {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes expandModalContainer {
  from {
    height: 350px;
  }
  to {
    height: 92%;
  }
}

@keyframes contractModalContainer {
  from {
    height: 92%;
    width: 450px;
  }
  to {
    height: 302px;
    width: $top-bottom-section-height * 2;
  }
}

@keyframes contractCenterSection {
  from {
    padding: 10px;
    padding-bottom: 20px;
  }
  to {
    padding: 0;
    padding-bottom: 0;
  }
}

@keyframes contractTopSection {
  from {
    border-top-left-radius: $modal-border-radius;
    border-top-right-radius: $modal-border-radius;
  }
  to {
    border-top-left-radius: $modal-border-radius-contracted;
    border-top-right-radius: $modal-border-radius-contracted;
  }
}

@keyframes contractBottomSection {
  from {
    border-bottom-left-radius: $modal-border-radius;
    border-bottom-right-radius: $modal-border-radius;
  }
  to {
    border-bottom-left-radius: $modal-border-radius-contracted;
    border-bottom-right-radius: $modal-border-radius-contracted;
  }
}

@keyframes pokeballShake {
  0% {
    transform: rotate(0deg) translateX(0);
  }
  22% {
    transform: rotate(-$shake-rotation) translateX(-$shake-distance);
  }
  44% {
    transform: rotate($shake-rotation) translateX($shake-distance);
  }
  66% {
    transform: rotate(0deg) translateX(0);
  }
}

@keyframes pokeballCaught {
  0% {
    transform: rotate(0deg) translateX(0);
  }
  44% {
    transform: rotate($shake-rotation) translateX($shake-distance);
  }
  100% {
    transform: rotate($shake-rotation) translateX($shake-distance);
  }
}
